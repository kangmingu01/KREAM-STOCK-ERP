<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.SettlementMapper">

    <!-- 구매정산 목록 개수 조회 (페이징 처리를 위한 전체 개수) -->
    <select id="selectSettlementCount" resultType="int">
        select count(*)
        from receiving r
        left join settlement t on t.receiving_id = r.receiving_id
        join orders o on r.orders_id = o.orders_id
        join product p on o.product_id = p.product_id
        join supplier s on o.supplier_id = s.supplier_id
        join erp_user u on t.userid = u.userid
        <where>
             <!-- 입고 완료 상태 필터링 및 정산 상태 필터링 (정산되지 않거나 완료된 항목 모두 포함) -->
             <if test="receivingStatus != null and receivingStatus != ''">
                 r.receiving_status = #{receivingStatus}
             </if>
             <if test="settlementStatus != null">
                 AND (t.settlement_status IS NULL OR t.settlement_status = #{settlementStatus})
             </if>
             
             <!-- 다른 검색 필터들 -->
             <if test="settlementId != null and settlementId != ''">
                 AND t.settlement_id = #{settlementId}
             </if>
             <if test="settlementDate != null and settlementDate != ''">
                 AND t.settlement_date = #{settlementDate}
             </if>
             <if test="receivingId != null and receivingId != ''">
                 AND r.receiving_id = #{receivingId}
             </if>
             <if test="name != null and name != ''">
                 AND u.name = #{name}
             </if>
             <if test="productId != null and productId != ''">
                 AND o.product_id = #{productId}
             </if>
             <if test="productName != null and productName != ''">
                 AND p.product_name like '%' || #{productName} || '%'
             </if>
             <if test="supplierId != null and supplierId != ''">
                 AND o.supplier_id = #{supplierId}
             </if>
        </where>
    </select>

<select id="selectSettlementList" resultType="Settlement">
    SELECT r.receiving_id, t.settlement_id, t.settlement_date, t.userid, u.name,
           o.product_id, p.product_name, s.supplier_name, r.quantity, o.product_price,
           t.settlement_status, o.supplier_id, r.receiving_status
    FROM receiving r
    LEFT JOIN settlement t ON t.receiving_id = r.receiving_id
    JOIN orders o ON r.orders_id = o.orders_id
    JOIN product p ON o.product_id = p.product_id
    JOIN supplier s ON o.supplier_id = s.supplier_id
    LEFT JOIN erp_user u ON t.userid = u.userid
    <where>
        <if test="receivingStatus != null and receivingStatus != ''">
            AND r.receiving_status = #{receivingStatus}
        </if>
        <if test="settlementStatus != null and settlementStatus != ''">
            AND (t.settlement_status IS NULL OR t.settlement_status = #{settlementStatus})
        </if>
        <if test="settlementId != null and settlementId != ''">
            AND t.settlement_id = #{settlementId}
        </if>
        <if test="settlementDate != null and settlementDate != ''">
            AND to_char(t.settlement_date, 'YYYY-MM-DD') = #{settlementDate}
        </if>
        <if test="receivingId != null and receivingId != ''">
            AND r.receiving_id = #{receivingId}
        </if>
        <if test="name != null and name != ''">
            AND u.name = #{name}
        </if>
        <if test="productId != null and productId != ''">
            AND o.product_id = #{productId}
        </if>
        <if test="productName != null and productName != ''">
            AND p.product_name LIKE '%' || #{productName} || '%'
        </if>
        <if test="supplierId != null and supplierId != ''">
            AND o.supplier_id = #{supplierId}
        </if>
    </where>
    ORDER BY r.receiving_id DESC
</select>




    <!-- 공급 업체 이름 목록 조회 -->
    <select id="selectSupplierList" resultType="Supplier">
        select supplier_id, supplier_name from supplier order by supplier_name
    </select>
    
    <!-- 정산 데이터 삽입 -->
    <insert id="insertSettlement" parameterType="Settlement">
        <selectKey resultType="int" keyProperty="settlementId" order="BEFORE">
            select settlement_seq.nextval from dual
        </selectKey>
        INSERT INTO settlement (settlement_id, settlement_date, userid, receiving_id, settlement_status, auth)
    	VALUES (#{settlementId}, SYSDATE, #{userid}, #{receivingId}, 6, 1) 
    </insert>

</mapper>
